enable_testing()

function(add_compiler_test)
  set(options COMPILE_ONLY LINK_ONLY RUN_ONLY WILL_FAIL)
  set(oneValueArgs NAME COMPILE_FLAGS LINK_FLAGS PASS_REGULAR_EXPRESSION FAIL_REGULAR_EXPRESSION TIMEOUT)
  set(multiValueArgs SOURCES LABELS)
  cmake_parse_arguments(PARSE "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
  if(PARSE_UNPARSED_ARGUMENTS)
    message(FATAL_ERROR "Unknown keywords given to add_compiler_test(): \"${PARSE_UNPARSED_ARGUMENTS}}\"")
  endif()
  if (PARSE_NAME)
    set(TEST_NAME ${PARSE_NAME})
  else()
    list(GET PARSE_SOURCES 0 TEST_NAME)
    string(REGEX REPLACE "\\.[^.]*$" "" TEST_NAME ${TEST_NAME})
    #string(MAKE_C_IDENTIFIER "${PROJECT_NAME}-${PARSE_SOURCES}" TEST_NAME)
  endif()
  if(PARSE_COMPILE_FLAGS)
    set_source_files_properties(${PARSE_SOURCES} PROPERTIES COMPILE_FLAGS "${PARSE_COMPILE_FLAGS}")
  endif()
  set(LABELS ${PROJECT_NAME})
  if(PARSE_LABELS)
    list(APPEND LABELS ${PARSE_LABELS})
  endif()
  if(PARSE_COMPILE_ONLY)
    add_library(${TEST_NAME} OBJECT EXCLUDE_FROM_ALL ${PARSE_SOURCES})
    add_test(NAME ${TEST_NAME}-obj
      COMMAND ${CMAKE_COMMAND} --build . --target ${TEST_NAME} --config $<CONFIGURATION>
      WORKING_DIRECTORY ${CMAKE_BINARY_DIR})
    if(PARSE_WILL_FAIL)
      set_tests_properties(${TEST_NAME}-obj PROPERTIES WILL_FAIL TRUE)
    endif()
    if(PARSE_TIMEOUT)
      set_tests_properties(${TEST_NAME}-obj PROPERTIES TIMEOUT "${PARSE_TIMEOUT}")
    endif()
    set_tests_properties(${TEST_NAME}-obj PROPERTIES LABELS "${LABELS}")
  elseif(PARSE_LINK_ONLY)
    add_executable(${TEST_NAME} EXCLUDE_FROM_ALL ${PARSE_SOURCES})
    add_test(NAME ${TEST_NAME}-exe
      COMMAND ${CMAKE_COMMAND} --build . --target ${TEST_NAME} --config $<CONFIGURATION>
      WORKING_DIRECTORY ${CMAKE_BINARY_DIR})
    if(PARSE_WILL_FAIL)
      set_tests_properties(${TEST_NAME}-exe PROPERTIES WILL_FAIL TRUE)
    endif()
    set_tests_properties(${TEST_NAME}-exe PROPERTIES LABELS "${LABELS}")
  elseif(PARSE_RUN_ONLY)
    add_executable(${TEST_NAME} ${PARSE_SOURCES})
    add_test(NAME ${TEST_NAME}-run COMMAND ${TEST_NAME} WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
    if(PARSE_WILL_FAIL)
      set_tests_properties(${TEST_NAME}-run PROPERTIES WILL_FAIL TRUE)
    endif()
    if(PARSE_PASS_REGULAR_EXPRESSION)
      set_tests_properties(${TEST_NAME}-run PROPERTIES PASS_REGULAR_EXPRESSION "${PARSE_PASS_REGULAR_EXPRESSION}")
    endif()
    if(PARSE_FAIL_REGULAR_EXPRESSION)
      set_tests_properties(${TEST_NAME}-run PROPERTIES FAIL_REGULAR_EXPRESSION "${PARSE_FAIL_REGULAR_EXPRESSION}")
    endif()
    set_tests_properties(${TEST_NAME}-run PROPERTIES LABELS "${LABELS}")
  else()
    add_executable(${TEST_NAME} EXCLUDE_FROM_ALL ${PARSE_SOURCES})
    add_test(NAME ${TEST_NAME}-exe
        COMMAND ${CMAKE_COMMAND} --build . --target ${TEST_NAME} --config $<CONFIGURATION>
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR})
    set_tests_properties(${TEST_NAME}-exe PROPERTIES FIXTURES_SETUP ${TEST_NAME})
    add_test(NAME ${TEST_NAME}-run
        COMMAND ${CMAKE_COMMAND} -E env $<TARGET_FILE:${TEST_NAME}>
        WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
    set_tests_properties(${TEST_NAME}-run PROPERTIES FIXTURES_REQUIRED ${TEST_NAME})
    if(PARSE_WILL_FAIL)
      set_tests_properties(${TEST_NAME}-run PROPERTIES WILL_FAIL TRUE)
    endif()
    if(PARSE_PASS_REGULAR_EXPRESSION)
      set_tests_properties(${TEST_NAME}-run PROPERTIES
          PASS_REGULAR_EXPRESSION "${PARSE_PASS_REGULAR_EXPRESSION}")
    endif()
    if(PARSE_FAIL_REGULAR_EXPRESSION)
      set_tests_properties(${TEST_NAME}-run PROPERTIES
          FAIL_REGULAR_EXPRESSION "${PARSE_FAIL_REGULAR_EXPRESSION}")
    endif()
    set_tests_properties(${TEST_NAME}-exe ${TEST_NAME}-run PROPERTIES LABELS "${LABELS}")
  endif()
  if(PARSE_LINK_FLAGS)
    set_target_properties(${TEST_NAME} PROPERTIES LINK_FLAGS "${PARSE_LINK_FLAGS}")
  endif()
endfunction()
